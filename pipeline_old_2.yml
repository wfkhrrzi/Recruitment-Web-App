variables:
  service_connection: 'dssandbox-spn'
  resource_group: 'PTAZSG-DEV-DSP-RG'
  app_name: 'ptsg-5dspwb04'
  slot_name: 'dstats'

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python37:
      PYTHON_VERSION: '3.7'
  maxParallel: 3

## No code trigger (events )
trigger: 
  branches:
    include:
    - deploy_v1

## Pipeline steps
steps:
  - task: UsePythonVersion@0
    displayName: "Setting Python version"
    inputs:
      versionSpec: '$(PYTHON_VERSION)'
      architecture: 'x64'

  - task: PythonScript@0
    displayName: 'Export project path'
    inputs:
      scriptSource: 'inline'
      script: |
        """Search all subdirectories for `manage.py`."""
        from glob import iglob
        from os import path
        # Python >= 3.5
        manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
        if not manage_py:
            raise SystemExit('Could not find a Django project')
        project_location = path.dirname(path.abspath(manage_py))
        print('Found Django project in', project_location)
        print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

  - script: |
      python -m pip install --upgrade pip setuptools wheel
      pip install -r requirements.txt
      echo "Dependencies installation completed"
    displayName: "Install requirements"
  
  # Step 3, deploy zip package to azure app service
  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: $(service_connection)
      appType: 'webAppLinux'
      WebAppName: $(app_name)
      deployToSlotOrASE: true
      ResourceGroupName: $(resource_group)
      SlotName: $(slot_name)
      packageForLinux:  '$(projectRoot)'
      RuntimeStack: 'PYTHON|3.7'
      appSettings: '-SCM_DO_BUILD_DURING_DEPLOYMENT true'
